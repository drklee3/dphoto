name: CI

on: [push, pull_request]

jobs:
    frontend:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Install Node.js dependencies
              working-directory: ./web
              run: yarn

            - name: Run frontend tests
              working-directory: ./web
              run: yarn test

            - name: Create React production build
              working-directory: ./web
              run: yarn build

            - name: Set outputs
              id: vars
              run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

            - name: Upload frontend artifacts
              uses: actions/upload-artifact@v1
              with:
                  name: picatch-${{ steps.vars.outputs.sha_short }}-frontend
                  path: ./web/build/

    build:
        needs: frontend
        continue-on-error: ${{ matrix.toolchain == 'nightly' }}
        strategy:
            matrix:
                toolchain:
                    - stable
                    - beta
                    - nightly
                    - 1.41.0 # MSRV
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2

            - name: Set outputs
              id: vars
              run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

            - name: Download frontend artifact
              uses: actions/download-artifact@v1
              with:
                  name: picatch-${{ steps.vars.outputs.sha_short }}-frontend
                  path: ./web/build/

            - name: Select toolchain
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.toolchain }}
                  override: true

            - name: Build picatch
              uses: actions-rs/cargo@v1
              with:
                  command: build
                  args: --release

            - name: Test picatch
              uses: actions-rs/cargo@v1
              with:
                  command: test
                  args: --release

            - name: Upload artifacts
              if: matrix.toolchain == 'stable'
              uses: actions/upload-artifact@v1
              with:
                  name: picatch-${{ steps.vars.outputs.sha_short }}-x86_64-unknown-linux-gnu
                  path: ./target/release/picatch
